// Code generated by protoc-gen-go. DO NOT EDIT.
// source: push_bidirectional_stream.proto

package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// request
type RpcPushRequest struct {
	Event                string   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcPushRequest) Reset()         { *m = RpcPushRequest{} }
func (m *RpcPushRequest) String() string { return proto.CompactTextString(m) }
func (*RpcPushRequest) ProtoMessage()    {}
func (*RpcPushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_push_bidirectional_stream_acb63933fe34a853, []int{0}
}
func (m *RpcPushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcPushRequest.Unmarshal(m, b)
}
func (m *RpcPushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcPushRequest.Marshal(b, m, deterministic)
}
func (dst *RpcPushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcPushRequest.Merge(dst, src)
}
func (m *RpcPushRequest) XXX_Size() int {
	return xxx_messageInfo_RpcPushRequest.Size(m)
}
func (m *RpcPushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcPushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RpcPushRequest proto.InternalMessageInfo

func (m *RpcPushRequest) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *RpcPushRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// response
type RpcPushResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcPushResponse) Reset()         { *m = RpcPushResponse{} }
func (m *RpcPushResponse) String() string { return proto.CompactTextString(m) }
func (*RpcPushResponse) ProtoMessage()    {}
func (*RpcPushResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_push_bidirectional_stream_acb63933fe34a853, []int{1}
}
func (m *RpcPushResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcPushResponse.Unmarshal(m, b)
}
func (m *RpcPushResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcPushResponse.Marshal(b, m, deterministic)
}
func (dst *RpcPushResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcPushResponse.Merge(dst, src)
}
func (m *RpcPushResponse) XXX_Size() int {
	return xxx_messageInfo_RpcPushResponse.Size(m)
}
func (m *RpcPushResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcPushResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RpcPushResponse proto.InternalMessageInfo

func (m *RpcPushResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RpcPushResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RpcPushResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*RpcPushRequest)(nil), "grpc.RpcPushRequest")
	proto.RegisterType((*RpcPushResponse)(nil), "grpc.RpcPushResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RpcPushServiceClient is the client API for RpcPushService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RpcPushServiceClient interface {
	// 双向流式rpc
	BidStream(ctx context.Context, opts ...grpc.CallOption) (RpcPushService_BidStreamClient, error)
}

type rpcPushServiceClient struct {
	cc *grpc.ClientConn
}

func NewRpcPushServiceClient(cc *grpc.ClientConn) RpcPushServiceClient {
	return &rpcPushServiceClient{cc}
}

func (c *rpcPushServiceClient) BidStream(ctx context.Context, opts ...grpc.CallOption) (RpcPushService_BidStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RpcPushService_serviceDesc.Streams[0], "/grpc.RpcPushService/BidStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &rpcPushServiceBidStreamClient{stream}
	return x, nil
}

type RpcPushService_BidStreamClient interface {
	Send(*RpcPushRequest) error
	Recv() (*RpcPushResponse, error)
	grpc.ClientStream
}

type rpcPushServiceBidStreamClient struct {
	grpc.ClientStream
}

func (x *rpcPushServiceBidStreamClient) Send(m *RpcPushRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *rpcPushServiceBidStreamClient) Recv() (*RpcPushResponse, error) {
	m := new(RpcPushResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RpcPushServiceServer is the server API for RpcPushService service.
type RpcPushServiceServer interface {
	// 双向流式rpc
	BidStream(RpcPushService_BidStreamServer) error
}

func RegisterRpcPushServiceServer(s *grpc.Server, srv RpcPushServiceServer) {
	s.RegisterService(&_RpcPushService_serviceDesc, srv)
}

func _RpcPushService_BidStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RpcPushServiceServer).BidStream(&rpcPushServiceBidStreamServer{stream})
}

type RpcPushService_BidStreamServer interface {
	Send(*RpcPushResponse) error
	Recv() (*RpcPushRequest, error)
	grpc.ServerStream
}

type rpcPushServiceBidStreamServer struct {
	grpc.ServerStream
}

func (x *rpcPushServiceBidStreamServer) Send(m *RpcPushResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *rpcPushServiceBidStreamServer) Recv() (*RpcPushRequest, error) {
	m := new(RpcPushRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _RpcPushService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.RpcPushService",
	HandlerType: (*RpcPushServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BidStream",
			Handler:       _RpcPushService_BidStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "push_bidirectional_stream.proto",
}

func init() {
	proto.RegisterFile("push_bidirectional_stream.proto", fileDescriptor_push_bidirectional_stream_acb63933fe34a853)
}

var fileDescriptor_push_bidirectional_stream_acb63933fe34a853 = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0x41, 0x6b, 0x84, 0x30,
	0x14, 0x84, 0x9b, 0x56, 0x5b, 0xcc, 0xa1, 0x85, 0x60, 0x41, 0x7a, 0x69, 0xf1, 0xe4, 0x49, 0x4a,
	0x7b, 0xdb, 0xc3, 0x1e, 0xf6, 0x17, 0x48, 0xfc, 0x01, 0x12, 0x93, 0x87, 0x06, 0x56, 0x93, 0xcd,
	0x8b, 0xfe, 0xfe, 0xc5, 0xb8, 0xeb, 0xb2, 0x7b, 0x9b, 0x19, 0xde, 0x0c, 0xdf, 0xa3, 0xdf, 0x76,
	0xc2, 0xbe, 0x69, 0xb5, 0xd2, 0x0e, 0xa4, 0xd7, 0x66, 0x14, 0xc7, 0x06, 0xbd, 0x03, 0x31, 0x94,
	0xd6, 0x19, 0x6f, 0x58, 0xd4, 0x39, 0x2b, 0xf3, 0x1d, 0x7d, 0xe7, 0x56, 0x56, 0x13, 0xf6, 0x1c,
	0x4e, 0x13, 0xa0, 0x67, 0x29, 0x8d, 0x61, 0x86, 0xd1, 0x67, 0xe4, 0x87, 0x14, 0x09, 0x5f, 0x0d,
	0x63, 0x34, 0x52, 0xc2, 0x8b, 0xec, 0x39, 0x84, 0x41, 0xe7, 0x35, 0xfd, 0xd8, 0xba, 0x68, 0xcd,
	0x88, 0xb0, 0x9c, 0x49, 0xa3, 0x20, 0x74, 0x63, 0x1e, 0x34, 0xcb, 0xe8, 0xdb, 0x00, 0x88, 0xa2,
	0x83, 0x4b, 0xfb, 0x6a, 0xb7, 0xd1, 0x97, 0xdb, 0xe8, 0x5f, 0xb5, 0x01, 0xd5, 0xe0, 0x66, 0x2d,
	0x81, 0xed, 0x69, 0x72, 0xd0, 0xaa, 0x0e, 0xec, 0x2c, 0x2d, 0x17, 0xec, 0xf2, 0x9e, 0xf9, 0xeb,
	0xf3, 0x21, 0x5d, 0x69, 0xf2, 0xa7, 0x82, 0xfc, 0x92, 0xf6, 0x35, 0xfc, 0xfb, 0x7f, 0x0e, 0x00,
	0x00, 0xff, 0xff, 0x8d, 0xca, 0x84, 0xcc, 0x12, 0x01, 0x00, 0x00,
}
